# -*- coding: utf-8 -*-
"""refactor2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hY8iu50vQQyP5kCyDAeBpNDnXKpLVHQ4
"""

import pytest
import subprocess
from unittest.mock import patch
from rss_collector.utils import get_proxy_settings
from rss_collector.proxy import fetch_feed_content_with_proxy

def test_fetch_feed_content_with_proxy_debug():
    """
    Test fetch_feed_content_with_proxy with detailed debugging for subprocess command mismatches.
    """
    mock_proxy_settings = {
        "app_proxy": "http://mock_proxy.com:85",
        "username": "mock_user",
        "password": "mock_password",
    }

    with patch("rss_collector.utils.get_proxy_settings", return_value=mock_proxy_settings):
        with patch("subprocess.check_output", return_value="Mocked Response") as mock_subprocess:
            feed_url = "https://example.com/rss"

            # Call the function
            response = fetch_feed_content_with_proxy(feed_url)

            # Expected command
            expected_command = (
                'echo "mock_password" | '
                'curl -s -x "http://mock_proxy.com:85" -U "mock_user" "https://example.com/rss" --proxy-ntlm'
            )

            # Debugging outputs
            print("--- Debugging Expected Command ---")
            print(f"Expected Command: {expected_command}")

            print("--- Debugging Mock Subprocess Call ---")
            print(f"Actual Call Arguments: {mock_subprocess.call_args}")

            # Assertions
            mock_subprocess.assert_called_once_with(expected_command, shell=True, text=True)
            assert response == "Mocked Response"