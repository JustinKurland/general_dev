def synthesize_final_conclusion(part1_results, part2_results):
    """
    Synthesizes findings from Part I (Seasonality Analysis) and Part II (HMM Analysis)
    to assess the likelihood of automation in the data.

    Parameters:
    ----------
    part1_results : pd.DataFrame
        Consolidated results from Temporal Dynamics and Seasonality Analysis (Part I).
    part2_results : pd.DataFrame
        Consolidated results from Hidden State and Behavioral Transition Analysis (Part II).

    Returns:
    -------
    conclusion : str
        A synthesized conclusion about the likelihood of automation based on both analyses.
    """

    # Part I: Seasonality Metrics
    strong_seasonality = part1_results["Seasonality Strength"].mean() > 0.8
    partial_seasonality = any(part1_results["Seasonality Strength"] > 0.8)
    low_residual_variance = part1_results["Residual to Total Ratio"].mean() < 0.1
    consistent_frequencies = all(part1_results["Dominant Frequency"].notna())

    # Part II: HMM Metrics
    high_log_likelihood = part2_results["Log Likelihood"].mean() > -1000

    systematic_transitions = any(
        "Systematic state transitions" in findings
        for findings in part2_results["Significant Findings"]
    )

    significant_dwell_differences = any(
        "Significant difference" in findings
        for findings in part2_results["Significant Findings"]
    )

    # Evaluate Evidence
    evidence = {
        "Strong seasonality": strong_seasonality,
        "Partial seasonality": partial_seasonality,
        "Low residual variance": low_residual_variance,
        "Consistent dominant frequencies": consistent_frequencies,
        "High log likelihood of HMM": high_log_likelihood,
        "Systematic state transitions": systematic_transitions,
        "Significant dwell time differences": significant_dwell_differences,
    }

    # Formulate Conclusion
    positive_indicators = sum(evidence.values())
    conclusion = ["Final Synthesis of Results:"]
    if positive_indicators >= 5:
        conclusion.append("The data exhibits strong evidence of automation.")
    elif 3 <= positive_indicators < 5:
        conclusion.append("The data shows moderate evidence of automation.")
    else:
        conclusion.append("The data does not provide strong evidence for automation.")
    
    # Add Detailed Evidence
    conclusion.append("\nDetailed Evidence Summary:")
    for metric, result in evidence.items():
        conclusion.append(f"- {metric}: {'Yes' if result else 'No'}")

    return "\n".join(conclusion)


def synthesize_final_conclusion(part1_results, hmm_results):
    """
    Synthesizes findings from Part I (Seasonality Analysis) and Part II (HMM Analysis)
    to assess the likelihood of automation in the data.

    Parameters:
    ----------
    part1_results : pd.DataFrame
        Consolidated results from Temporal Dynamics and Seasonality Analysis (Part I).
    hmm_results : dict
        Consolidated results from Hidden State and Behavioral Transition Analysis (Part II).

    Returns:
    -------
    conclusion : str
        A synthesized conclusion about the likelihood of automation based on both analyses.
    """

    # Part I: Seasonality Metrics
    strong_seasonality = part1_results["Seasonality Strength"].mean() > 0.8
    partial_seasonality = any(part1_results["Seasonality Strength"] > 0.8)
    low_residual_variance = part1_results["Residual to Total Ratio"].mean() < 0.1
    consistent_frequencies = all(part1_results["Dominant Frequency"].notna())

    # Part II: HMM Metrics
    log_likelihoods = [
        result.get("Log Likelihood", float("-inf")) for result in hmm_results.values()
    ]
    high_log_likelihood = all(ll > -1000 for ll in log_likelihoods)

    transition_matrices = [
        result.get("Transition Matrix", []) for result in hmm_results.values()
    ]
    systematic_transitions = any(
        tm and all(value > 0.8 for row in tm for value in row) for tm in transition_matrices
    )

    significant_dwell_differences = any(
        "Significant difference" in ", ".join(result.get("Feedback", []))
        for result in hmm_results.values()
    )

    # Evaluate Evidence
    evidence = {
        "Strong seasonality": strong_seasonality,
        "Partial seasonality": partial_seasonality,
        "Low residual variance": low_residual_variance,
        "Consistent dominant frequencies": consistent_frequencies,
        "High log likelihood of HMM": high_log_likelihood,
        "Systematic state transitions": systematic_transitions,
        "Significant dwell time differences": significant_dwell_differences,
    }

    # Formulate Conclusion
    positive_indicators = sum(evidence.values())
    conclusion = ["Final Synthesis of Results:"]
    if positive_indicators >= 5:
        conclusion.append("The data exhibits strong evidence of automation.")
    elif 3 <= positive_indicators < 5:
        conclusion.append("The data shows moderate evidence of automation.")
    else:
        conclusion.append("The data does not provide strong evidence for automation.")
    
    # Add Detailed Evidence
    conclusion.append("\nDetailed Evidence Summary:")
    for metric, result in evidence.items():
        conclusion.append(f"- {metric}: {'Yes' if result else 'No'}")

    return "\n".join(conclusion)
